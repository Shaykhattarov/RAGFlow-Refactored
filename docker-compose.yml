services:
  ragflow:
    image: infiniflow/ragflow:v0.19.1-slim
    env_file: .env
    environment:
      TZ: ${TIMEZONE}
      HF_ENDPOINT: ${HF_ENDPOINT}
      MACOS: ${MACOS}
    ports:
      - 80:80
      - 443:443
      - ${SVR_HTTP_PORT}:9380
    depends_on:
      - mysql
      - redis
    volumes:
      - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ragflow/ragflow-logs:/ragflow/logs
      - ./ragflow/history_data_agent:/ragflow/history_data_agent
      - ./ragflow/service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template
      - ./ragflow/entrypoint.sh:/ragflow/entrypoint.sh
    networks:
      - ragflow
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  admin-panel:
    build: ./admin_panel
    container_name: ragflow-admin-panel
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./ragflow/keys:/app/src/keys
    depends_on:
      - mysql
    networks:
      - ragflow
    develop:
      watch:
        - path: ./admin_panel/src
          action: rebuild
    restart: unless-stopped
    
  mysql:
    image: mysql:8.0
    container_name: ragflow-mysql
    env_file: .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${TIMEZONE}
    command:
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --tls_version="TLSv1.2,TLSv1.3"
      --init-file /data/application/init.sql
      --binlog_expire_logs_seconds=604800
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/data/application/init.sql
    networks:
      - ragflow
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: ${MYSQL_HOST}
      ADMINER_DEFAULT_DRIVER: "mysql"
      ADMINER_DEFAULT_USERNAME: "root"
      ADMINER_DEFAULT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - ragflow
    depends_on:
      - mysql

  minio:
    image: quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z
    container_name: ragflow-minio
    command: server --console-address ":9001" /data
    ports:
      - ${MINIO_CONSOLE_PORT}:9001
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      TZ: ${TIMEZONE}
    volumes:
      - minio_data:/data
    networks:
      - ragflow
    restart: on-failure

  redis:
    image: valkey/valkey:8
    container_name: ragflow-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    env_file: .env
    volumes:
      - redis_data:/data
    networks:
      - ragflow
    restart: on-failure

  infinity:
    container_name: ragflow-infinity
    profiles:
      - infinity
    image: infiniflow/infinity:v0.6.0-dev3
    volumes:
      - infinity_data:/var/infinity
      - ./infinity/infinity_conf.toml:/infinity_conf.toml
    command: ["-f", "/infinity_conf.toml"]
    ports:
      - ${INFINITY_THRIFT_PORT}:23817
      - ${INFINITY_HTTP_PORT}:23820
      - ${INFINITY_PSQL_PORT}:5432
    env_file: .env
    environment:
      TZ: ${TIMEZONE}
    mem_limit: ${MEMORY_LIMIT}
    ulimits:
      nofile:
        soft: 500000
        hard: 500000
    networks:
      - ragflow
    healthcheck:
      test: ["CMD", "curl", "http://localhost:23820/admin/node/current"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure

  elasticsearch:
    container_name: ragflow-elasticsearch
    profiles:
      - elasticsearch
    image: elasticsearch:${STACK_VERSION}
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    env_file: .env
    environment:
      - node.name=elasticsearch
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=false
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - cluster.routing.allocation.disk.watermark.low=5gb
      - cluster.routing.allocation.disk.watermark.high=3gb
      - cluster.routing.allocation.disk.watermark.flood_stage=2gb
      - TZ=${TIMEZONE}
    mem_limit: ${MEMORY_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - ragflow
    restart: on-failure


networks:
  ragflow:

volumes:
  mysql_data:
  redis_data:
  minio_data:
  infinity_data:
  elasticsearch_data:
